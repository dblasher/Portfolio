{"version":3,"sources":["layouts/About.js","projects/TicTac.js","projects/weather/ZipForm.js","projects/weather/WeatherListItem.js","projects/weather/WeatherList.js","projects/weather/CurrentDay.js","projects/weather/Weather.js","layouts/NavBar.js","layouts/Footer.js","App.js","serviceWorker.js","index.js","layouts/Daniel.jpg"],"names":["About","react_default","a","createElement","index_es","src","Daniel","style","width","height","margin","justifyContent","variant","component","Component","TicTac","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","squares","Array","fill","xIsNext","winner","winningLine","lines","handleClick","bind","assertThisInitialized","event","target","id","theWinner","calculateWinner","setState","player","i","length","_this$lines$i","slicedToArray","b","c","className","includes","eventHandler","onClick","status","display","renderSquare","ZipForm","zipcode","InputUpdated","submitZipCode","e","value","preventDefault","onSubmit","htmlFor","onInput","type","name","required","WeatherListItem","onDayClick","date","getDay","index","day","Date","dt","weekday","getWeekday","getMonth","getDate","temp","min","toFixed","max","WeatherList","_this2","days","city","map","weather_WeatherListItem","key","CurrentDay","w","weather","icon","alt","description","morn","eve","night","pressure","humidity","speed","Weather","dates","selectedDate","url","apikey","onFormSubmit","get","then","_ref","data","list","catch","error","alert","clickedDay","weather_CurrentDay","weather_ZipForm","weather_WeatherList","TabContainer","padding","children","NavBar","handleChange","flexGrow","position","color","onChange","label","layouts_About","class","src_projects_TicTac","projects_weather_Weather","React","Footer","App","src_layouts_NavBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b25f912a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Paper, Avatar, Typography } from '@material-ui/core';\r\nimport Daniel from './Daniel.jpg';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Paper>\r\n                <Avatar src = {Daniel} style={{ width: 180, height: 180, margin: \"auto\", justifyContent:\"center\"}}/>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    Hi, I'm Daniel.\r\n                </Typography>\r\n                <Typography component=\"p\">\r\n          I can't wait to tell you all about myself. Stay Tuned!\r\n        </Typography>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport './TicTac.css';\r\n\r\nclass TicTac extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n            winner: null,\r\n            winningLine: []\r\n        };\r\n        this.lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n    } //end of constructor\r\n\r\n    handleClick(event) {\r\n        let squares = this.state.squares;\r\n        squares[event.target.id] = (this.state.xIsNext) ? \"X\" : \"O\";\r\n        const theWinner = this.calculateWinner(squares);\r\n        //in React you have to use setState()\r\n        this.setState({\r\n            squares,   //property name == variable name, so can just put squares\r\n            xIsNext: !this.state.xIsNext,\r\n            winner: theWinner.player,\r\n            winningLine: theWinner.winningLine\r\n        });\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        for (let i = 0; i < this.lines.length; i++) {\r\n            const [a, b, c] = this.lines[i];\r\n            if (squares[a] &&\r\n                squares[a] === squares[b] &&\r\n                squares[a] === squares[c]) {\r\n                return { player: squares[a], winningLine: this.lines[i] };\r\n            }\r\n        }\r\n        return { player: null, winningLine: [] };\r\n    }\r\n\r\n    renderSquare(i) {\r\n        const className = (this.state.squares[i] == null) ? \"square\" :\r\n            (this.state.winner != null && this.state.winner === this.state.squares[i] &&\r\n                this.state.winningLine.includes(i)) ?\r\n                \"square-winner\" : \"square-full\";\r\n        const enabled = (this.state.winner == null && this.state.squares[i] == null) ? true : false;\r\n        const eventHandler = (enabled) ? this.handleClick : () => { };\r\n        //changed output from template literals to JSX\r\n        // `${var}` becomes {var}\r\n        const output =\r\n            <div className={className} id={i}\r\n                onClick={eventHandler}>\r\n                {(this.state.squares[i] != null) ? this.state.squares[i] : \"\"}\r\n            </div>;\r\n        //you don't need quotations above? what variable type is output if not a string?\r\n        return output;\r\n    }\r\n\r\n    render() {\r\n        let status;\r\n        if (this.state.winner) {\r\n            status = 'Winner: ' + this.state.winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        const output =\r\n            <Paper>\r\n                <div style = {{display: \"inline-block\"}}>\r\n                    <div className=\"status\">{status}</div>\r\n                    <div className=\"row\">\r\n                        {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n                    </div>\r\n                </div>\r\n\r\n            </Paper>;\r\n\r\n        return output;\r\n    }\r\n} //end of App Component class\r\n\r\nexport default TicTac;\r\n","import React, { Component } from 'react';\r\n\r\nclass ZipForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            zipcode: \"\"\r\n        }\r\n        this.InputUpdated = this.InputUpdated.bind(this);\r\n        this.submitZipCode = this.submitZipCode.bind(this);\r\n    }//end of constructor\r\n\r\n    InputUpdated(e){\r\n        const zipcode = e.target.value;\r\n        this.setState({zipcode});  //property and variable names are the same, so only need to write zipcode\r\n    }\r\n\r\n    submitZipCode (e) {\r\n        e.preventDefault(); // don’t submit the form\r\n        const { zipcode } = this.state; // get the zipcode from the state\r\n        const { onSubmit } = this.props; // the method from the App\r\n        onSubmit(zipcode); // the form calls a method on the App and passes the zipcode\r\n        this.setState( {zipcode : \"\"} ); // clear the zipcode in the class (and on the web page)\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"zip-form\">\r\n                <form onSubmit= {this.submitZipCode} id=\"zipForm\">\r\n                    <div className=\"flex-parent\">\r\n                        <label htmlFor=\"zipcode\">Zip</label>\r\n                        <input onInput = {this.InputUpdated} className=\"form-control\" type=\" input\" id=\"zipcode\"\r\n                         name=\"zipcode\" value={this.state.zipcode} required\r\n                        />\r\n                        <button type=\"submit\" className=\"btn btn-success\"> Get the forcast!</button>\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ZipForm;","import React, { Component } from 'react';\r\n\r\nclass WeatherListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDayClick = this.onDayClick.bind(this);\r\n    }\r\n\r\n    getWeekday(date) {\r\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const weekday = date.getDay();\r\n        return dayNames[weekday];\r\n    }\r\n    onDayClick() {\r\n        const {index} = this.props;\r\n\r\n        const { onDayClick } = this.props;\r\n        onDayClick(index);\r\n    }\r\n\r\n    render() {\r\n        const { day } = this.props;\r\n        const date = new Date(day.dt * 1000);\r\n        const weekday = this.getWeekday(date);\r\n        return (\r\n            <div onClick={this.onDayClick} className=\"weather-list-item\">\r\n                <h2> {date.getMonth() + 1} / {date.getDate()}</h2>\r\n                <h3>{weekday}</h3>\r\n                <h3> {day.temp.min.toFixed(1)}&deg;F &#124; {day.temp.max.toFixed(1)}&deg;F</h3>\r\n            </div>\r\n        );\r\n    }\r\n} //end of list item class\r\n\r\nexport default WeatherListItem;","import React, { Component } from 'react';\r\nimport WeatherListItem from './WeatherListItem';\r\n\r\nclass WeatherList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDayClick = this.onDayClick.bind(this);\r\n    }\r\n\r\n    onDayClick(index){\r\n        const {onDayClick} = this.props;\r\n        onDayClick(index);\r\n    }\r\n\r\n    render() {\r\n        const { days } = this.props;\r\n        const { city } = this.props;\r\n        return (\r\n\r\n            <div className=\"weather-list flex-parent\">\r\n                <h1>{city} 7 Day Forecast</h1>\r\n                {days.map((day, index) =>\r\n                    <WeatherListItem\r\n                        key={day.dt}\r\n                        day={day}\r\n                        index={index}\r\n                        onDayClick = {this.onDayClick} />)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}// end of weather list\r\n\r\nexport default WeatherList;","import React, { Component } from 'react';\r\n\r\nclass CurrentDay extends Component {\r\n\r\n    getWeekday(date) {\r\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const weekday = date.getDay();\r\n        return dayNames[weekday];\r\n    }\r\n\r\n    render() {\r\n        //const index = this.props;\r\n        const {city} = this.props;\r\n        const {day} = this.props;\r\n        const w = day.weather[0];\r\n        const date= new Date(day.dt * 1000);\r\n        const weekday = this.getWeekday(date);\r\n        const icon = 'http://openweathermap.org/img/w/' + w.icon + '.png';\r\n        return (\r\n            <div className=\"current-day\">\r\n                <h1 className=\"day-header\">{weekday} in {city.name}</h1>\r\n                <div className=\"weather\">\r\n                    <p>\r\n                        <img src= {icon} alt={w.description} />\r\n                        {w.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"details flex-parent\">\r\n                    <div className=\"temperature-breakdown\">\r\n                        <p>Morning Temperature: {day.temp.morn}&deg;F</p>\r\n                        <p>Day Temperature: {day.temp.day}&deg;F</p>\r\n                        <p>Evening Temperature: {day.temp.eve}&deg;F</p>\r\n                        <p>Night Temperature: {day.temp.night}&deg;F</p>\r\n                    </div>\r\n                    <div className=\"misc-details\">\r\n                        <p>Atmospheric Pressure: {day.pressure} hPa</p>\r\n                        <p>Humidity: {day.humidity}%</p>\r\n                        <p>Wind Speed: {day.speed} mph</p>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}//end of current day\r\n\r\nexport default CurrentDay;","import React, { Component } from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport './Weather.css';\r\nimport ZipForm from './ZipForm';\r\nimport WeatherList from './WeatherList';\r\nimport CurrentDay from './CurrentDay';\r\nimport get from 'axios';\r\n\r\nclass Weather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            zipcode: \"\",\r\n            city: {},\r\n            dates: [],\r\n            selectedDate: null\r\n        };\r\n        this.url = \"http://api.openweathermap.org/data/2.5/forecast/daily?zip=\";\r\n        this.apikey = \"&units=imperial&appid=4319ff27021579d6c2adf5fc9c83b5eb\";\r\n\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.onDayClick = this.onDayClick.bind(this);\r\n\r\n    }//end of constructor\r\n\r\n    onFormSubmit(zipcode) {\r\n        //using axios for ajax call instead of fetch\r\n        get(this.url + zipcode + this.apikey)\r\n            .then(({ data }) => {\r\n                const { city, list: dates } = data;     //good example of destructuring an object. this.state.dates is being assigned data.list\r\n                this.setState({ zipcode, city, dates, selectedDate: null });\r\n            })\r\n            .catch(error => {\r\n                alert(error);\r\n            })\r\n    }\r\n\r\n    onDayClick(index) {\r\n        let clickedDay = this.state.dates[index];\r\n        this.setState({ selectedDate: clickedDay });\r\n    }\r\n\r\n    render() {\r\n        let day = (this.state.selectedDate != null) ? <CurrentDay day={this.state.selectedDate} city={this.state.city} /> : \"\";\r\n        return (\r\n            <Paper>\r\n                <div className=\"weatherbody\">\r\n                    This is my weather app. we'll use {this.url} for getting weather data.\r\n       <ZipForm onSubmit={this.onFormSubmit} />\r\n                    <WeatherList days={this.state.dates} city={this.state.city.name} onDayClick={this.onDayClick} />\r\n                    {day}\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n} //end of App class\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport './NavBar.css';\r\nimport About from './About';\r\nimport TicTac from '../projects/TicTac';\r\nimport Weather from '../projects/weather/Weather';\r\n\r\n//red #ef104c\r\n//green #10ed40\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n    render() {\r\n        const { value } = this.state;\r\n        //const { classes } = this.props;\r\n        return (\r\n            <div style={{ flexGrow: 2 }}>\r\n                <AppBar position=\"static\" color = \"secondary\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"title\" color=\"inherit\">\r\n                            Daniel Blasher\r\n                </Typography>\r\n                        <Tabs value={value} onChange={this.handleChange}>\r\n                            <Tab label=\"About\" />\r\n                            <Tab label=\"Projects\" />\r\n                            <Tab label=\"Contact\" />\r\n                        </Tabs>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {value === 0 && <About/>}\r\n                {value === 1 && <TabContainer><div class=\"projectHeader\">Tic Tac Toe!</div><TicTac/><div class=\"projectHeader\">Weather!</div><Weather/></TabContainer>}\r\n                {value === 2 && <TabContainer>Contact</TabContainer>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NavBar;","import React from 'react'\r\n\r\nexport default props =>\r\n    <div>\r\n        <h3 style ={{display: 'flex', justifyContent: 'center'}}>Site under Construction</h3>\r\n    </div>","import React, { Component } from 'react';\nimport { NavBar, Footer } from './layouts';\nimport './App.css';\n\nclass App extends Component {\n\n  //---begin render---\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Footer />\n      </div>\n    );\n  }\n  //---end render---\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Daniel.c0b9efac.jpg\";"],"sourceRoot":""}